#########
# Step 1
Code affected: none
Created this file.

#########
# Step 2
Code affected: all .java files
Reformatted using the Google Java style formatter.

#########
# Step 3
Code affected: Fish.turnAround
Flaw: unnecessary if, leading to duplicate code.
Fix: replaced if statement with a single assignment statement.

#########
# Step 4
Code affected: Scope of variable appearance in Fish.java
Flaw: this variable can be private
Fix: make this variable private

#########
# Step 5
Code affected: Scope of variable goingRight in Fish.java
Flaw: this variable can be private
Fix: make this variable private

#########
# Step 6
Code affected: Scope of variable r in Fish.java
Flaw: this variable can be private
Fix: make this variable private

#########
# Step 7
Code affected: Scope of method blowBubble in Fish.java
Flaw: this method can be private
Fix: make this method private

#########
# Step 8
Code affected: Scope of method turnAround in Fish.java
Flaw: this method can be private
Fix: make this method private

#########
# Step 9
Code affected: Scope of method drawString() in Fish.java
Flaw: this method can be private
Fix: make this method private

#########
# Step 10
Code affected: variable paintText in Fish.java
Flaw: since the paintText will not be changed later, hence, we can set it as final
Fix: add final to the variable

#########
# Step 11
Code affected: Fish.reverseAppearance()
Flaw: String concatenation in a loop. Since reverse is of reference type String, hence
"reverse += ***" will make java to create a new reverse String with a new String. As such,
it used a lot of memory.
Fix: 1) instead of String reverse = "", StringBuilder reverse = new StringBuilder() is used.
     2) change any reverse += *** into reverse.append(***)
     3) change return reverse into return reverse.toString()

#########
# Step 12
Code affected: Seaweed.draw(canvas)
Flaw:(i % 2 == 0) == !false can be simplified
Fix: Simplified into (i % 2 == 0)

#########
# Step 13
Code affected: Seaweed.draw(canvas)
Flaw:i % 2 == 0 != false can be simplified
Fix: Simplified into i % 2 == 0

#########
# Step 14
Code affected: Seaweed.draw(canvas)
Flaw:((i % 2 == 1) == true) != false can be simplified
Fix: Simplified into (i % 2 == 1)

#########
# Step 15
Code affected:  Bubble.d
Flaw: variable can be package private
Fix: variable is made package private

#########
# Step 16
Code affected: Bubble.x (int)
Flaw: variable x can be private
Fix: variable x is made private

#########
# Step 17
Code affected: Bubble.y (int)
Flaw: variable y can be private
Fix: variable y is made private

#########
# Step 18
Code affected: Bubble.paintText
Flaw: variable paintText can be made final as it doesn't need to be change later
Fix: paintText is made final

#########
# Step 19
Code affected: Bubble.drawString
Flaw: method can be made private
Fix: method is made private

#########
# Step 20
Code affected: Bubble.floatStraightUp()
Flaw: x is assigned to itself (x = x)
Fix: delete the x = x

#########
# Step 21
Code affected: Bubble.draw
Flaw: the variables x and y are switched in the method drawString in the body of draw
Fix: switched the variable x and y

#########
# Step 22
Code affected: Seaweed constructor comments redundancy
Flaw: The parameter x and y is defined in Seaweed but is not in the constructor
Fix: Delete it

#########
# Step 23
Code affected: Variables in Seaweed
Flaw: my_curr_row and my_curr_col is defined at the bottom of the class
Fix: For better flow of the code, I am defining the 2 variables on top.

#########
# Step 24
Code affected: Seaweed.l
Flaw: variable l should be made private
Fix: make variable l private

#########
# Step 25
Code affected: Seaweed.leanRight
Flaw: variable leanRight should be made private
Fix: make variable leanRight private

#########
# Step 26
Code affected: Seaweed.colour
Flaw: The field colour is never used
Fix: Delete it

#########
# Step 27
Code affected: Seaweed.drawString
Flaw: drawString should be made private as it is a helper method
Fix: make it private

#########
# Step 28
Code affected: Seaweed.paintText
Flaw: paintText should be made final because the colour of the Seaweed shouldn't be changed later on
Fix:make it final

#########
# Step 29
Code affected: Seaweed.l
Flaw: l should be made final, because the number of seaweed is fixed in the aquarium
Fix: make it final

#########
# Step 30
Code affected: Seaweed.draw()
Flaw: It can be made package-private to prevent access of user
Fix: Make it package-private

#########
# Step 31
Code affected: Seaweed.setLocation()
Flaw: It can be made package-private to prevent access of user
Fix: Make it package-private

#########
# Step 32
Code affected: Seaweed.wave()
Flaw: It can be made package-private to prevent access of user
Fix: Make it package-private

#########
# Step 33
Code affected: Seaweed.draw()
Flaw: the if condition (i % 2 == 1 == true) has a redundant part
Fix: change to (i % 2 == 1) instead

#########
# Step 34
Code affected: Seaweed.draw()
Flaw: Most of the if conditions can be simplified further
Fix:    change
    if((i % 2 == 0))
        if(lR){...}
        to
    if((i % 2 == 0) && lR){...}
