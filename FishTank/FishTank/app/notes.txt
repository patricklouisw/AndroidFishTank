#########
# Step 1
Code affected: none
Created this file.

#########
# Step 2
Code affected: all .java files
Reformatted using the Google Java style formatter.

#########
# Step 3
Code affected: Fish.turnAround
Flaw: unnecessary if, leading to duplicate code.
Fix: replaced if statement with a single assignment statement.

#########
# Step 4
Code affected: Scope of variable appearance in Fish.java
Flaw: this variable can be private
Fix: make this variable private

#########
# Step 5
Code affected: Scope of variable goingRight in Fish.java
Flaw: this variable can be private
Fix: make this variable private

#########
# Step 6
Code affected: Scope of variable r in Fish.java
Flaw: this variable can be private
Fix: make this variable private

#########
# Step 7
Code affected: Scope of method blowBubble in Fish.java
Flaw: this method can be private
Fix: make this method private

#########
# Step 8
Code affected: Scope of method turnAround in Fish.java
Flaw: this method can be private
Fix: make this method private

#########
# Step 9
Code affected: Scope of method drawString() in Fish.java
Flaw: this method can be private
Fix: make this method private

#########
# Step 10
Code affected: variable paintText
Flaw: since the paintText will not be changed later, hence, we can set it as final
Fix: add final to the variable

#########
# Step 11
Code affected: method reverseAppearance()
Flaw: String concatenation in a loop. Since reverse is of reference type String, hence
"reverse += ***" will make java to create a new reverse String with a new String. As such,
it used a lot of memory.
Fix: 1) instead of String reverse = "", StringBuilder reverse = new StringBuilder() is used.
     2) change any reverse += *** into reverse.append(***)
     3) change return reverse into return reverse.toString()